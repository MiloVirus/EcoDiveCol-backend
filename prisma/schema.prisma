generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuarios {
  user_id         String             @id @default(uuid())
  first_name      String
  last_name       String
  phone           Int?               @unique
  email           String             @unique
  city            String?
  rol             String?
  password        String
  PADI_NAUI_ID    String?            @unique
  all_time_puntos Int?
  curr_puntos     Int?
  rango           String?
  bookings        Bookings[]
  reviews         Reviews[]
  logs            UsuariosOnLogros[]
}

model DiveShop {
  diveshop_id String        @id @default(uuid())
  name        String
  city        String
  phone       String
  email       String
  address     String
  actividades Actividades[]
  bookings    Bookings[]
  reviews     Reviews[]
  rewards     Rewards[]
}

model Bookings {
  booking_id  String   @id @default(uuid())
  user_id     String
  diveshop_id String
  date        DateTime
  status      Boolean
  diveshop    DiveShop @relation(fields: [diveshop_id], references: [diveshop_id])
  user        Usuarios @relation(fields: [user_id], references: [user_id])
}

model Reviews {
  review_id   String   @id @default(uuid())
  puntuacion  Int
  comentario  String
  fecha       DateTime
  user_id     String
  diveshop_id String
  diveshop    DiveShop @relation(fields: [diveshop_id], references: [diveshop_id])
  user        Usuarios @relation(fields: [user_id], references: [user_id])
}

model Actividades {
  actividad_id String   @id @default(uuid())
  name         String
  descripcion  String
  precio       Float
  diveshop_id  String
  diveshop     DiveShop @relation(fields: [diveshop_id], references: [diveshop_id])
}

model Logros {
  logro_id    String             @id @default(uuid())
  name        String
  descripcion String
  imagen      String
  puntos      Int
  user        UsuariosOnLogros[]
}

model UsuariosOnLogros {
  id         Int      @id @default(autoincrement())
  user_id    String
  logro_id   String
  completado Boolean  @default(true)
  fecha      DateTime @default(now())
  logro      Logros   @relation(fields: [logro_id], references: [logro_id])
  usuario    Usuarios @relation(fields: [user_id], references: [user_id])

  @@unique([user_id, logro_id])
}

model Rewards {
  reward_id    String   @id @default(uuid())
  name         String
  descripcion  String
  puntos       Int
  diveshop_id  String
  claimed      Boolean @default(false)
  diveshop     DiveShop @relation(fields: [diveshop_id], references: [diveshop_id])
}

